trigger:
  branches:
    include:
      - main
pr:
  branches:
    include:
      - main

jobs:
- job: CreateMinikubeCluster
  pool:
    name: default
  steps:
  - checkout: self

  # Paso 1: Clonar el repositorio de la página web
  - script: |
      git clone https://github.com/Ycasall/personal-website.git
    displayName: 'Clone the web project repository'

  # Paso 2: Verificar instalación de Docker
  - script: |
      docker --version
      docker run hello-world
      ls -l /var/run/docker.sock
    displayName: 'Verify Docker installation'

  # Paso 3: Iniciar Minikube con Docker como driver
  - script: |
      minikube start --driver=docker
    displayName: 'Start Minikube cluster'

  # Paso 4: Configurar kubectl para usar Minikube
  - script: |
      kubectl config use-context minikube
    displayName: 'Set kubeconfig'

  # Paso 5: Construir la imagen Docker desde el Dockerfile
  - script: |
      cd personal-website
      docker build -t personal-website:v2 .
    displayName: 'Build Docker image for web app'

  # Paso 6: Instalar SonarScanner CLI
  - script: |
      sudo apt-get update
      sudo apt-get install -y openjdk-11-jdk zip unzip wget
      wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -O sonar-scanner.zip
      unzip sonar-scanner.zip -d ./sonar-scanner
      export PATH=$(pwd)/sonar-scanner/sonar-scanner-4.8.0.2856-linux/bin:$PATH
    displayName: 'Install SonarScanner CLI'

  # Paso 7: Preparar el análisis de SonarCloud
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloudConnection'  # Nombre de la conexión de servicio de SonarCloud
      organization: 'efreway'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'personal-website'  # Clave del proyecto en SonarCloud
      extraProperties: |
        sonar.projectName=Personal Website
        sonar.sources=./personal-website
    displayName: 'Prepare SonarCloud Analysis'

  # Paso 8: Ejecutar el análisis de SonarCloud
  - script: |
      sonar-scanner \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=$(SONAR_TOKEN)  # Usa el secreto SONAR_TOKEN
    displayName: 'Run SonarCloud Analysis'

  # Paso 9: Publicar los resultados en SonarCloud
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'Publish SonarCloud Results'

  # Paso 10: Subir la imagen a Docker Hub (opcional)
  - script: |
      docker login -u $(DOCKER_USERNAME) -p $(DOCKER_PASSWORD)
      docker tag personal-website:v2 efreway/personal-website:v2
      docker push efreway/personal-website:v2
    displayName: 'Push Docker image to Docker Hub'

  # Paso 11: Desplegar la aplicación web con Kubernetes
  - script: |
      kubectl apply -f personal-website/deployment.yaml
    displayName: 'Deploy web app to Minikube'

  # Paso 12: Desplegar el servicio para exponer la página web
  - script: |
      kubectl apply -f personal-website/services.yaml
    displayName: 'Expose web app service'

  # Paso 13: Verificar estado del clúster y Pods
  - script: |
      kubectl get nodes
    displayName: 'Check Minikube cluster status'
