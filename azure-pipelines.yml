trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

jobs:
- job: CreateMinikubeCluster
  pool:
    name: default
  steps:
  - checkout: self

  # Paso 1: Clonar el repositorio de la página web (aunque ya lo hace `checkout: self`, no es necesario, se deja por si acaso)
  - script: |
      git clone https://github.com/Ycasall/Project-basic-web.git
    displayName: 'Clone the web project repository'

  # Paso 2: Instalar Docker
  ##- script: |
  #    sudo apt-get update
  #    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
  #    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  #    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  #    sudo apt-get update
  #    sudo apt-get install -y docker-ce  
  #    sudo usermod -aG docker $(whoami)
  ##  displayName: 'Install Docker'

  # Paso 3: Verificar instalación de Docker
  - script: |
      docker --version
      docker run hello-world
      ls -l /var/run/docker.sock
    displayName: 'Verify Docker installation'

  # Paso 4: Iniciar Minikube con Docker como driver
  - script: |
      minikube start --driver=docker
    displayName: 'Start Minikube cluster'

  # Paso 5: Configurar kubectl para usar Minikube
  - script: |
      kubectl config use-context minikube
    displayName: 'Set kubeconfig'

  # Paso 6: Construir la imagen Docker desde el Dockerfile
  - script: |
      cd Project-basic-web  # Asegúrate de estar en el directorio correcto
      docker build -t web-app .
    displayName: 'Build Docker image for web app'

  # Paso 7: (Opcional) Subir la imagen a Docker Hub (solo si necesitas almacenar la imagen de forma remota)
  - script: |
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      docker tag web-app your-dockerhub-username/your-repository-name:latest
      docker push your-dockerhub-username/your-repository-name:latest
    displayName: 'Push Docker image to Docker Hub'

  # Paso 8: Desplegar la aplicación web con Kubernetes
  - script: |
      kubectl apply -f Project-basic-web/.k8s/deployment.yaml
    displayName: 'Deploy web app to Minikube'

  # Paso 9: Verificar que el clúster de Minikube esté funcionando
  - script: |
      kubectl get nodes
    displayName: 'Verify Minikube cluster'

  # Paso 10: Verificar el estado de los Pods
  - script: |
      kubectl get pods
    displayName: 'Check pod status'
